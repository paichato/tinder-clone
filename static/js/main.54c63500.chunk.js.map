{"version":3,"sources":["Header.js","axios.js","TinderCards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAwBeA,MAlBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACG,cAACC,EAAA,EAAD,UACL,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,kBAIvC,qBAAKA,UAAU,cACfG,IAAI,2EACJC,IAAI,KACN,eAACH,EAAA,EAAD,oBAAkB,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,kECX7CK,E,OAJCC,EAAMC,OAAO,CACzBC,QAAS,4CCuDEC,MArDf,WAAwB,IAAD,EAEQC,mBAAS,IAFjB,mBAEZC,EAFY,KAEJC,EAFI,KAyBnB,OAtBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACqBR,EAAMS,IAAI,gBAD/B,OACUC,EADV,OAGIJ,EAAUI,EAAIC,MAHlB,4CADY,uBAAC,WAAD,wBAOZC,KACD,IAEHC,QAAQC,IAAIT,GAaR,qBAAKX,UAAU,cAAf,SACI,qBAAKA,UAAU,4BAAf,SACCW,EAAOU,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CACAtB,UAAU,QAEVuB,aAAc,CAAC,KAAK,QACpBC,QAAS,SAACC,GAAD,OAjBAC,EAiBmBJ,EAAOK,UAhB/CR,QAAQC,IAAI,WAAWM,GADd,IAAYA,GAkBTE,iBAAkB,kBAbhBD,EAa+BL,EAAOK,UAZpDR,QAAQC,IAAIO,EAAK,mBADJ,IAACA,GAQF,SAOI,qBAAKE,MAAO,CAACC,gBAAgB,OAAD,OAASR,EAAOS,OAAhB,MAC5B/B,UAAU,OADV,SAEA,6BAAKsB,EAAOK,UAPXL,EAAOK,c,6FCFbK,MAxBf,WACI,OACI,sBAAKhC,UAAU,eAAf,UAEI,cAACC,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,oBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAYD,UAAU,oBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,yBAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gBCNvB+B,MAdf,WACE,OACE,sBAAKjC,UAAU,MAAf,UAGE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCFSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.54c63500.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n           <IconButton>\r\n      <PersonIcon fontSize=\"large\" className=\"header_icon\"/>\r\n      \r\n      </IconButton>\r\n\r\n      <img className=\"header_logo\" \r\n      src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo-500x281.png\" \r\n      alt=\"\"></img>\r\n    <IconButton>      <ForumIcon fontSize=\"large\" className=\"header_icon\"/>\r\n    </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios';\r\n\r\nconst instance= axios.create({\r\n    baseURL: 'https://tinder-backend-c.herokuapp.com/'\r\n})\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport './TinderCards.css';\r\nimport axios from './axios';\r\n\r\nfunction TinderCards() {\r\n\r\n    const [people, setPeople]= useState([]);\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const req= await axios.get(\"/tinder/card\");\r\n\r\n            setPeople(req.data);\r\n        }\r\n        \r\n        fetchData();\r\n    }, []);\r\n\r\n    console.log(people);\r\n\r\n\r\nconst swiped=(direction, nameToDelete)=>{\r\n    console.log(\"removing\"+nameToDelete);\r\n    //setLastDirection(direction);\r\n};\r\n\r\nconst outOfFrame=(name)=>{\r\n    console.log(name+\"left the screen\");\r\n}\r\n\r\n    return (\r\n        <div className=\"tinderCards\">\r\n            <div className=\"tinderCards_cardContainer\">\r\n            {people.map((person)=>(\r\n                <TinderCard \r\n                className=\"swipe\" \r\n                key={person.name} \r\n                preventSwipe={[\"up\",\"down\"]} \r\n                onSwipe={(dir)=>swiped(dir, person.name)} \r\n                onCardLeftScreen={()=>outOfFrame(person.name)}>\r\n                    \r\n                    <div style={{backgroundImage: `url(${person.imgUrl})`}} \r\n                    className=\"card\"> \r\n                    <h3>{person.name}</h3>\r\n                    </div>\r\n                    \r\n                    </TinderCard>\r\n                \r\n            ))}\r\n\r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TinderCards\r\n","import React from 'react';\r\nimport './SwipeButtons.css';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            \r\n            <IconButton className=\"swipeButtons_repeat\">\r\n                <ReplayIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons_left\">\r\n                <CloseIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons_star\">\r\n                <StarRateIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons_right\">\r\n                <FavoriteIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons_lightning\">\r\n                <FlashOnIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n","\nimport './App.css';\nimport Header from './Header';\nimport TinderCards from './TinderCards';\nimport SwipeButtons from './SwipeButtons';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n\n      <Header/>\n      <TinderCards/>\n      <SwipeButtons/>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}